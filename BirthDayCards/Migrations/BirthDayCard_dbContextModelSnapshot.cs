// <auto-generated />
using System;
using BirthDayCards.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BirthDayCards.Migrations
{
    [DbContext(typeof(BirthDayCard_dbContext))]
    partial class BirthDayCard_dbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BirthDayCards.Models.BdEvent", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BdayId")
                        .HasColumnName("BDayId");

                    b.Property<string>("Eaddress")
                        .IsRequired()
                        .HasColumnName("EAddress")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Ecity")
                        .IsRequired()
                        .HasColumnName("ECity")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Edate")
                        .HasColumnName("EDate")
                        .HasColumnType("date");

                    b.Property<string>("Eemail")
                        .IsRequired()
                        .HasColumnName("EEmail")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Ename")
                        .IsRequired()
                        .HasColumnName("EName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EphoneNumber")
                        .IsRequired()
                        .HasColumnName("EPhoneNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("EpostalCode")
                        .IsRequired()
                        .HasColumnName("EPostalCode")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("Eprovince")
                        .IsRequired()
                        .HasColumnName("EProvince")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Etime")
                        .IsRequired()
                        .HasColumnName("ETime")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("EventId")
                        .HasName("PK__BD_Event__7944C810C083E71A");

                    b.HasIndex("BdayId");

                    b.ToTable("BD_Event");
                });

            modelBuilder.Entity("BirthDayCards.Models.BdayPerson", b =>
                {
                    b.Property<int>("BdayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BDayId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BdComingAge")
                        .IsRequired()
                        .HasColumnName("Bd_Coming_Age")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("BdFirstName")
                        .IsRequired()
                        .HasColumnName("BD_FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("BdLastName")
                        .IsRequired()
                        .HasColumnName("BD_LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("BdayId")
                        .HasName("PK__BDayPers__E6AFE14EAA92BBC1");

                    b.ToTable("BDayPerson");
                });

            modelBuilder.Entity("BirthDayCards.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Amount");

                    b.Property<string>("Description");

                    b.Property<int?>("PersonAccountPersonId");

                    b.Property<string>("UserName");

                    b.HasKey("PaymentId");

                    b.HasIndex("PersonAccountPersonId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("BirthDayCards.Models.PersonAccount", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("PersonId")
                        .HasName("PK__Person_A__AA2FFBE5E7102F39");

                    b.HasIndex("UserName");

                    b.ToTable("Person_Account");
                });

            modelBuilder.Entity("BirthDayCards.Models.Roles", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE1A6D7D1B97");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("BirthDayCards.Models.Template", b =>
                {
                    b.Property<int>("TemplateId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("TemplateUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("TemplateId");

                    b.ToTable("Template");
                });

            modelBuilder.Entity("BirthDayCards.Models.TemplateBdayPerson", b =>
                {
                    b.Property<int>("TempBday")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Temp_Bday")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BdayId")
                        .HasColumnName("BDayId");

                    b.Property<int?>("TemplateId");

                    b.HasKey("TempBday")
                        .HasName("PK__Template__971E5D9344A9C485");

                    b.HasIndex("BdayId");

                    b.HasIndex("TemplateId");

                    b.ToTable("Template_BdayPerson");
                });

            modelBuilder.Entity("BirthDayCards.Models.Users", b =>
                {
                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("RoleId");

                    b.HasKey("UserName")
                        .HasName("PK__Users__C9F28457AFADA90D");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BirthDayCards.Models.BdEvent", b =>
                {
                    b.HasOne("BirthDayCards.Models.BdayPerson", "Bday")
                        .WithMany("BdEvent")
                        .HasForeignKey("BdayId")
                        .HasConstraintName("FK__BD_Event__BDayId__04E4BC85");
                });

            modelBuilder.Entity("BirthDayCards.Models.Payment", b =>
                {
                    b.HasOne("BirthDayCards.Models.PersonAccount", "PersonAccount")
                        .WithMany("Payments")
                        .HasForeignKey("PersonAccountPersonId");
                });

            modelBuilder.Entity("BirthDayCards.Models.PersonAccount", b =>
                {
                    b.HasOne("BirthDayCards.Models.Users", "UserNameNavigation")
                        .WithMany("PersonAccount")
                        .HasForeignKey("UserName")
                        .HasConstraintName("FK__Person_Ac__UserN__0C85DE4D");
                });

            modelBuilder.Entity("BirthDayCards.Models.TemplateBdayPerson", b =>
                {
                    b.HasOne("BirthDayCards.Models.BdayPerson", "Bday")
                        .WithMany("TemplateBdayPerson")
                        .HasForeignKey("BdayId")
                        .HasConstraintName("FK__Template___BDayI__07C12930");

                    b.HasOne("BirthDayCards.Models.Template", "Template")
                        .WithMany("TemplateBdayPerson")
                        .HasForeignKey("TemplateId")
                        .HasConstraintName("FK__Template___Templ__08B54D69");
                });

            modelBuilder.Entity("BirthDayCards.Models.Users", b =>
                {
                    b.HasOne("BirthDayCards.Models.Roles", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__Users__RoleId__75A278F5");
                });
#pragma warning restore 612, 618
        }
    }
}
